{"version":3,"sources":["components/08-useReducer/TodoAdd.js","hooks/useForm.js","components/08-useReducer/TodoListItem.js","components/08-useReducer/TodoList.js","components/08-useReducer/todoReducer.js","components/08-useReducer/TodoApp.js","index.js"],"names":["TodoAdd","handleAddTodo","initialState","useState","values","setValues","target","name","value","useForm","description","handleInputChange","reset","onSubmit","e","preventDefault","trim","length","newTodo","id","Date","getTime","desc","done","className","type","placeholder","autoComplete","onChange","TodoListItem","todo","index","handleDelete","handleToggle","onClick","TodoList","todos","map","i","todoReducer","state","action","payload","filter","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e8b29e9f.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const TodoAdd = ({ handleAddTodo }) => {\r\n\r\n    const [{description}, handleInputChange, reset]  = useForm({\r\n        description: ''\r\n    });\r\n   \r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (description.trim().length <= 1){\r\n            return;\r\n        }\r\n\r\n        const newTodo = {\r\n            id: new Date().getTime(),\r\n            desc: description,\r\n            done: false\r\n        };\r\n\r\n        handleAddTodo( newTodo );\r\n        reset();\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n              <h4>Agregar Tarea</h4>   \r\n              <hr />\r\n              <form onSubmit={handleSubmit}> \r\n                  <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  name=\"description\"\r\n                  placeholder=\"Aprender ...\"\r\n                  autoComplete=\"off\"\r\n                  value ={description}\r\n                  onChange={handleInputChange}\r\n                  />\r\n                  <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-outline-primary mt-2 btn-block\">\r\n                      Agregar \r\n                  </button>\r\n              </form>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import { useState } from \"react\"\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({target}) =>{\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n}\r\n","import React from 'react'\r\n\r\nexport const TodoListItem = ({todo, index, handleDelete, handleToggle }) => {\r\n    return (\r\n        <li \r\n        key ={todo.id} className=\"list-group-item\"\r\n        >\r\n        <p\r\n         className={`${todo.done && 'complete'}`}\r\n         onClick={ () => handleToggle(todo.id) }\r\n         >\r\n             {index +1}.{todo.desc}\r\n             </p>\r\n        <button  onClick={ () => handleDelete(todo.id)}\r\n                 className=\"btn btn-danger\">\r\n                 Borrar\r\n        </button>\r\n    </li>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TodoListItem } from './TodoListItem'\r\n\r\nexport const TodoList = ({todos, handleDelete, handleToggle}) => {\r\n    return (\r\n        <ul className=\"list-group list-group-flush\">\r\n        {\r\n            todos.map((todo, i) => (\r\n               <TodoListItem \r\n               key = {todo.id}\r\n                  todo  = {todo }\r\n                  index = {i}\r\n                  handleDelete = {handleDelete}\r\n                  handleToggle = {handleToggle}\r\n               />\r\n            ))\r\n        }\r\n</ul>\r\n    )\r\n}\r\n\r\n\r\n","export const todoReducer = (state= [], action) => {\r\n    switch (action.type) {\r\n        case 'add':\r\n            \r\n            return[...state, action.payload];\r\n\r\n        case 'delete':\r\n            return state.filter(todo => todo.id !== action.payload); \r\n\r\n\r\n        case 'toggle' : \r\n        return state.map(todo => \r\n            \r\n            (todo.id === action.payload )\r\n            ? { ...todo, done: !todo.done }\r\n            : todo\r\n        );\r\n        \r\n        case 'toggle-old': \r\n        return state.map(todo =>{\r\n            if( todo.id === action.payload){\r\n                return {\r\n                    ...todo, done: !todo.done\r\n                }\r\n            }else{\r\n                return todo ;\r\n            }\r\n        })\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { useEffect, useReducer } from 'react'\r\nimport  './style.css'\r\nimport { TodoAdd } from './TodoAdd';\r\nimport { TodoList } from './TodoList';\r\nimport { todoReducer } from './todoReducer';\r\n\r\n\r\nconst init = () => {\r\n    return JSON.parse(localStorage.getItem('todos'))  || [];\r\n}\r\n\r\nexport const TodoApp = () => {\r\n\r\n    const [todos, dispatch] = useReducer(todoReducer, [], init);\r\n\r\n\r\n    useEffect(()=> {\r\n        localStorage.setItem('todos',JSON.stringify(todos))\r\n    }, [todos]);\r\n\r\n    const handleDelete = (todoId) => {\r\n        const action  = {\r\n            type: 'delete',\r\n            payload: todoId\r\n        }\r\n        dispatch(action);\r\n        \r\n    }\r\n    \r\n    const handleToggle = (todoId) => {\r\n        dispatch({\r\n            type: 'toggle',\r\n            payload: todoId\r\n        });\r\n    }\r\n\r\n    const handleAddTodo = ( newTodo ) => {\r\n        dispatch({\r\n            type: 'add',\r\n            payload: newTodo\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Aplicacion de tareas en React, ({todos.length}) tareas </h1>\r\n            <hr />\r\n           \r\n            <div className=\"row\">\r\n                <div className=\"col-7\">\r\n                        <TodoList\r\n                            todos ={todos}\r\n                            handleDelete = {handleDelete}\r\n                            handleToggle = {handleToggle}\r\n                        />\r\n                </div>\r\n                <div className=\"col-5\">\r\n                      \r\n                    <TodoAdd\r\n                        handleAddTodo = {handleAddTodo}\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { TodoApp } from './components/08-useReducer/TodoApp';\n// import { MainApp } from './components/09-useContext/MainApp';\n// // import { CallbackHook } from './components/06-memos/CallbackHook';\n// import { Padre } from './components/07-tarea-memo/Padre';\n// // import { MemoHook } from './components/06-memos/MemoHook';\n// // import { Memorize } from './components/06-memos/Memorize';\n// // import { Layout } from './components/05-useLayoutEffect/Layout';\n// // import { FormWithCustonHook } from './components/02-useEffect/FormWithCustonHook';\n// // import { MultiplesCustomHooks } from './components/03-exsamples/MultiplesCustomHooks';\n// // import { FocusScreen } from './components/04-useRef/FocusScreen';\n// // import { ReactExampleRef } from './components/04-useRef/ReactExampleRef';\n// // import { SimpleForm } from './components/02-useEffect/SimpleForm';\n// // import { CounterApp } from './components/01-useState/CounterApp';\n// // import { CounterWithCustomHooks } from './components/01-useState/CounterWithCustomHooks';\n// // import { HookApp } from './HookApp';\n\n\n\n\n\n \n\nReactDOM.render(\n \n    <TodoApp />,\n  document.getElementById('root')\n);\n\n\n\n\n"],"sourceRoot":""}